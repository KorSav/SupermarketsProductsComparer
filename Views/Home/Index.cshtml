@model PaginatedList<ProductViewModel>
@using Microsoft.AspNetCore.Components;

@{
    ViewData["Title"] = "Product List";
}

<div class="container">
    <h1 class="my-4">Products</h1>

    <form method="get" class="mb-4">
        <div class="input-group">
            <input type="text" name="find" class="form-control" placeholder="Search products..." value="@Context.Request.Query["find"]" />
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
    </form>

    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-lg-2 col-md-3 col-sm-4 col-5 mb-4">
                <a href="@product.ProductLink" class="text-decoration-none">
                    <div class="card h-100">
                        <img src="@product.ImageLink" class="card-img-top" alt="@product.Name" style="height: 150px; object-fit: cover;">
                        <div class="card-body text-center">
                            <h5 class="card-title text-truncate">@product.Name</h5>
                            <p class="card-text text-muted mb-2">@product.Price грн</p>
                            <p class="card-text text-muted mb-1">@product.PriceUnified за @product.MeasureUnified</p>
                            <p class="card-text text-muted mb-1">@product.ShopName</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>

    <nav aria-label="Product pagination" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-find="@Context.Request.Query["find"]" asp-route-page="@(Model.PageNo - 1)" asp-route-pageSize="@(Model.PageSize)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            <li class="page-item active">
                <span class="page-link">Page @Model.PageNo of @Model.TotalPages</span>
            </li>

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-find="@Context.Request.Query["find"]" asp-route-page="@(Model.PageNo + 1)" asp-route-pageSize="@(Model.PageSize)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>

<style>
    .card {
        cursor: pointer;
        transition: transform 0.2s;
    }

    .card:hover {
        transform: scale(1.05);
    }

    .card-title {
        font-size: 1rem;
    }

    .card-text {
        font-size: 0.875rem;
    }
</style>
